import React from 'react';
import { Link } from 'react-router-dom';
import {ErrorBoundary} from 'react-error-boundary';
import { Layout, Row, Col, Button, Divider } from 'antd';

import { MeshViewer } from '../../components/MeshViewer';
import { Footer } from '../../components/Footer';

const { Content } = Layout;
const heroImageCenter = '/landing/tee.glb';
const heroImageLeft = '/landing/trucker.png';
const rapperImage = '/landing/rapper.png';
const personImage = '/landing/person.png';

export const LandingView = () => {
  return (
    <Layout className="landing-screen">
      <Layout>
        <Content style={{ display: 'flex', flexWrap: 'wrap' }}>
          <Row className="hero-section">
            <Col xs={24} md={8} style={{ textAlign: 'center' }}>
              <img src={heroImageLeft} alt="" />
              <br />
              <br />
              <br />
              <h3>–¢–≤–æ–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ NFT –≤–µ—â–∏</h3>
              <p>
                –ü–æ–∫—É–ø–∞–π—Ç–µ –∏ –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ NFT –∞–π—Ç–µ–º—ã –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ –∑–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É.
              </p>
              <Link to="/auctions">
                <Button type="primary" style={{marginBottom: '1em'}}>
                  –ê—É–∫—Ü–∏–æ–Ω
                </Button>{' '}
              </Link>
              <Link to="/about">
                <Button>–î–µ—Ç–∞–ª–∏ –ü—Ä–æ–µ–∫—Ç–∞</Button>
              </Link>
            </Col>

            <Col xs={24} md={16} className="hero-mesh">
              <ErrorBoundary
                FallbackComponent={ErrorFallback}
                onReset={() => {
                  // reset the state of your app so the error doesn't happen again
                }}
              >
                <MeshViewer
                  url={heroImageCenter}
                  className="artwork-image"
                  style={{ width: '100%' }}
                  withGui={true}
                />
              </ErrorBoundary>
            </Col>
          </Row>

          <Row className="description-section">
            <Col xs={24} md={16}>
              <p style={{ textAlign: 'left' }}>
                –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–π—Ç–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —É –≤–∞—Å –¥–æ —Ç–µ—Ö –ø–æ—Ä
                –ø–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏–ª–∏ –≤—ã –Ω–µ —Ä–µ—à–∏—Ç–µ –æ—Ç –Ω–∏—Ö –∏–∑–±–∞–≤–∏—Ç—Å—è.
              </p>
            </Col>
          </Row>

          <Divider />

          <Row className="with-radial-bg">
            <Col xs={24} md={14} style={{ display: 'flex' }}>
              <img src={personImage} className="middle-section-image-02" />
              <img src={rapperImage} className="middle-section-image" />
            </Col>
            <Col xs={23} md={10} className="more-info-section">
              <h1 className="section-title">
                üíé <span className="gradient-blue-purple">NFT MERCH</span>
              </h1>
              <h3 className="section-subtitle">by UKRATRAX</h3>
              <p>
                Ukratrax –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ –∫–∞–∂–¥—ã–π –º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –º–µ—Ä—á,
                —Å–æ–∑–¥–∞–Ω–Ω—ã–π –º—É–∑—ã–∫–∞–Ω—Ç–∞–º–∏ –∏ –∞—Ä—Ç–∏—Å—Ç–∞–º–∏. –°–æ–±–∏—Ä–∞–π—Ç–µ, –ø–æ–∫—É–ø–∞–π—Ç–µ –∏
                –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ NFT –∞–π—Ç–µ–º—ã –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ —Å –¥—Ä—É–≥–∏–º–∏ —é–∑–µ—Ä–∞–º–∏. NFT –º–µ—Ä—á
                –∞–π—Ç–µ–º—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ –≤–∞—à–µ–º
                –∫–æ—à–µ–ª—å–∫–µ (–≤ –±–ª–æ–∫—á–µ–π–Ω–µ Solana).
              </p>
              <p>
                –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –≤ –ò–Ω—Å—Ç–µ –∏ –¢–∏–∫–¢–æ–∫–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –±—É–¥—É—â–∏—Ö
                —ç–π—Ä-–¥—Ä–æ–ø–∞—Ö.
              </p>

              <br />
              <Link to="/artists">
                <Button type="primary" size="large">
                  {' '}
                  –°–º–æ—Ç—Ä–∏—Ç–µ –ö–æ–ª–ª–µ–∫—Ü–∏–∏ ‚Üí
                </Button>
              </Link>
              <br />
              <br />
              <br />
            </Col>
          </Row>

          <Divider style={{ marginTop: 0 }} />
        </Content>
      </Layout>
      <Footer />
    </Layout>
  );
};

interface ErrorProps {
  error: Error,
  resetErrorBoundary: () => void
}

function ErrorFallback({error, resetErrorBoundary}: ErrorProps) {
  return (
    <div role="alert">
      <p>Something went wrong:</p>
      <small>{error.message}</small>
      <br />
      <Button onClick={resetErrorBoundary}>Try again</Button>
    </div>
  )
}
